{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","concat","mode","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","class","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.d00ba0b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return <div>\r\n  <nav className={`navbar navbar-expand-lg navbar-$(props.mode) bg-$(props.mode)`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n{/*\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n*/}        \r\n      </ul>\r\n      {\r\n      /*<form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      */\r\n      }\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  \r\n  \r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  </div>;\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\ntitle: 'Set Title Here',\r\naboutText: 'About Text Here'\r\n};\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props)\r\n{\r\n  const handleUpClick=()=>{\r\n    //console.log(\"Uppercase was clicked\"+text);\r\n    setText(\"You have clicked on handleUpClick\")\r\n    let newText=text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  }\r\n\r\nconst handleLoClick=()=>{\r\n    //console.log(\"Uppercase was clicked\"+text);\r\n\r\n    let newText=text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  }\r\n\r\nconst handleClearClick=()=>{\r\n    //console.log(\"Uppercase was clicked\"+text);\r\n\r\n    let newText='';\r\n    setText(newText)\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n    \r\n  }\r\n\r\n  const handleCopy=(event)=>{\r\n    //console.log(\"I am copy\");\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard!\", \"success\");\r\n\r\n  }\r\n\r\n  const handleExtraSpaces=()=>{\r\n   let newText=text.split(/[ ]+/);\r\n   setText(newText.join(\" \"));\r\n   props.showAlert(\"Removed extra spaces!\", \"success\");\r\n\r\n\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n\r\n  //text=\"new text\"; //wrong way to change the state\r\n  //setText(\"new Text\");//Correct way to change the state is to use setText\r\n  return( \r\n    <>\r\n  <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n<h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <label htmlFor=\"myBox\" class=\"form-label\">Example textarea</label>\r\n  <textarea class=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n  </div>\r\n  <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n     <h2>Your text summary</h2>\r\n     <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n     <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n     <h2>Preview</h2>\r\n     <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  /*\r\n  const capitalize=(word)=>{\r\n      const lower=word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n  */\r\n  return (\r\n    <div>\r\n     <div className={'alert alert-$(props.alert.type) alert-dismissible fade show'} role=\"alert\">\r\n     <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n       \r\n     </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n//import ReactDOM from \"react-dom\";\n//import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\n\nexport default function App() {\n\n  const [mode, setMode] = useState('light'); //Whether dark mode is available or not\n  const [alert, setAlert]=useState('');\n  const showAlert=(message, type)=>{\n       setAlert({\n         msg: message,\n         type: type\n       })\n       setTimeout(()=>{setAlert('');},1500);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n     setMode('dark');\n     document.body.style.backgroundColor='grey';\n     showAlert(\"Dark mode has been enabled\",\"success\");\n     document.title='TextUtils-DarkMode';\n    // setInterval(()=>{\n      // document.title='TextUtils is Amazing Mode';\n     //},2000);\n     //setInterval(()=>{\n      //document.title='Install TextUtils Now';\n    //},1500);\n    } else{\n    \n     setMode('light');\n     document.body.style.backgroundColor='white';\n     showAlert(\"Light mode has been enabled\",\"success\");\n     document.title='TextUtils-LightMode';\n    }\n     \n   }\n  \n    \n  return (\n  <>\n{/*<Navbar title=\"SampleAppForTextUtils\" aboutText=\"About Us\"/>*/}\n\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n\n</div>\n\n\n  </>\n  );\n  }\n//export default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}